{"version":3,"sources":["Components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","date","Date","this","setInterval","console","log","setState","prevProps","clockName","props","clearInterval","toLocaleTimeString","React","Component","App","isClockVisible","Math","random","changeShowClock","value","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,aADF,IAGEC,MAAQ,CACNC,KAAM,IAAIC,MAJd,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,QAAUK,aAAY,WAEzBC,QAAQC,IAAI,EAAKN,MAAMC,MAEvB,EAAKM,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAbP,gCAgBE,SAAmBM,GACjB,IAAQC,EAAcD,EAAdC,UAEJA,IAAcN,KAAKO,MAAMD,WAE3BJ,QAAQC,IAAR,qCAA0CG,EAA1C,eAA0DN,KAAKO,MAAMD,cArB3E,kCAyBE,WACMN,KAAKJ,SACPY,cAAcR,KAAKJ,WA3BzB,oBA+BE,WACE,IAAQE,EAASE,KAAKH,MAAdC,KACAQ,EAAcN,KAAKO,MAAnBD,UAER,OACE,qCACGR,EAAKW,qBACL,KACAH,SAvCT,GAA2BI,IAAMC,WCN3BC,G,kNACJf,MAAQ,CACNgB,gBAAgB,EAChBP,UAAWQ,KAAKC,U,EAGlBC,gBAAkB,SAACC,GACjB,EAAKb,SAAS,CAAES,eAAgBI,K,4CAGlC,WAAU,IAAD,OACP,EAAsCjB,KAAKH,MAAnCgB,EAAR,EAAQA,eAAgBP,EAAxB,EAAwBA,UAExB,OACE,sBAAKY,UAAU,MAAf,UACE,6CACA,8CAEG,IACAL,GAAmB,cAAC,EAAD,CAAOP,UAAWA,OAExC,wBACEa,KAAK,SACLC,QAAS,WACP,EAAKJ,iBAAgB,IAHzB,wBAQA,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKJ,iBAAgB,IAHzB,wBAQA,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKhB,SAAS,CAAEE,UAAWQ,KAAKC,YAHpC,oC,GArCUL,IAAMC,YAkDTC,ICnDfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.36664825.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: number;\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timerId?: NodeJS.Timeout;\n\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      // eslint-disable-next-line\n      console.log(this.state.date);\n\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName } = prevProps;\n\n    if (clockName !== this.props.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { date } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <>\n        {date.toLocaleTimeString()}\n        {'  '}\n        {clockName}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Components/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.random(),\n  };\n\n  changeShowClock = (value: boolean): void => {\n    this.setState({ isClockVisible: value });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && (<Clock clockName={clockName} />)}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.changeShowClock(true);\n          }}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.changeShowClock(false);\n          }}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.random() });\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}